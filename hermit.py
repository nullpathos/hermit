#!/usr/bin/python
# coding=UTF-8
'''
Hermit

Application launcher for GNU/Linux.

A simple tabbed window shows icons that will launch commands specified by .desktop files
found in /usr/share/applications and user defined locations.

License: Public domain.

Author: nullpathos, 2014
'''
version = "1.0"

import pygtk
pygtk.require('2.0')
import gtk
import os
import glib
import shlex
from lxml import etree
import keybinder
import syslog

def show_error(errortext):
    '''Log errortext to Linux system log'''
    syslog.syslog(errortext)

class Inline_assets(object):
    """Inline definitions of Glade XML files and window icon"""
    # inline icon created mostly using 
    # gdk-pixbuf-csource imagefile | sed -n -e 's/{/[/' -e 's/};/]/' -e '/".*"/p' >outfile
    # then pasted here
    hermit_icon_inline = [
  ""
  "GdkP"
  "\0\0""0Y"
  "\2\1\0\2"
  "\0\0\0\360"
  "\0\0\0<"
  "\0\0\0<"
  "\275\0\0\0\0\204\0\0\177\377\202\0\0~\377\3\0\0\177\377\0\0\200\377\0"
  "\0\201\377\202\0\0\177\377\3\0\0\200\377\0\0\202\377\0\0~\377\203\0\1"
  "z\377\1\0\0z\377\202\0\0\0\0\22\7cS\377\13WE\377\1>1\377-\207x\377\7"
  "WK\377\5^Q\377\11gW\377\5_P\377\1VH\377\7hY\377\27ue\377\2_O\377&\206"
  "v\377\23eV\377\6YJ\377\17hV\377\3cV\377\4UJ\377\202\0\0\0\0\13-@\345"
  "\377)=\345\377#m\345\377#e\345\377#G\345\377#Z\345\377\"a\345\377#x\345"
  "\377=#\345\377#k\345\377#K\345\377\202#P\345\377\5B$\345\377#S\345\377"
  "#B\345\377#k\345\377\"'\345\377\202\0\0\0\0\204\0\0[\377\12\0\0z\377"
  "\0\0y\377\0\0[\377\0\0}\377\0\0~\377\0\0|\377\0\0}\377\0\0\177\377\0"
  "\0\200\377\0\0~\377\204\0\0|\377\202\0\0\0\0\22\14cT\377\2""9.\377\15"
  "\\N\377\31zi\377\25k]\377\27yj\377\12fW\377\4]M\377\5eT\377\6eV\377\7"
  "j\\\377\5`P\377\24[O\377\11MA\377\7bO\377\22se\377\17cU\377\16eU\377"
  "\202\0\0\0\0\22#E\345\377#J\345\37723\345\377<%\345\377)^\345\377E#\345"
  "\377>.\345\377#^\345\377\"<\345\377#o\345\377#t\345\377#p\345\377#]\345"
  "\377#>\345\377#k\345\377#j\345\377#c\345\377\"X\345\377\202\0\0\0\0\206"
  "\0\0u\377\2\0\0w\377\0\0x\377\202\0\0z\377\4\0\0[\377\0\0}\377\0\0\177"
  "\377\0\0\200\377\202\0\0\201\377\202\0\0\200\377\202\0\0\0\0\22\15jZ"
  "\377\3RE\377\25wg\377\36\177r\377\23ud\377\16o_\377\3SG\377\25rb\377"
  "\4XK\377\13k[\377\10k\\\377\6aR\377\12dS\377\16gW\377\37}p\377\23l]\377"
  "\3L>\377\32ue\377\202\0\0\0\0\22*:\345\377#<\345\377#E\345\377,(\345"
  "\377$D\345\3772$\345\377\"2\345\377(_\345\377&W\345\377;&\345\377D%\345"
  "\377A%\345\377A#\345\377#]\345\377<%\345\377;(\345\377:,\345\377\77""1"
  "\345\377\202\0\0\0\0\204\0\0p\377\12\0\0q\377\0\0r\377\0\0t\377\0\0u"
  "\377\0\0w\377\0\1x\377\0\1z\377\0\0|\377\0\0}\377\0\0\201\377\204\0\0"
  "\205\377\202\0\0\0\0&\20q`\377\6]N\377\32xi\377\25td\377\12bR\377\17"
  "iZ\377\14^Q\377\15n\\\377\6VI\377\15cU\377\5]Q\377\3[N\377\3[M\377\31"
  "ug\377\12iZ\377\3J<\377\22iZ\377\13m]\377\0\3\6\0\3\0\7\0%)\345\377#"
  "U\345\377#Y\345\377%$\345\377#L\345\377+$\345\377#\77\345\377$Q\345\377"
  "%C\345\377$3\345\3772-\345\3771,\345\377#-\345\377#N\345\377#,\345\377"
  "#B\345\377&W\345\377#9\345\377\202\0\0\0\0\202\0\1k\377\1\0\0l\377\202"
  "\0\0m\377\15\0\1m\377\0\1o\377\0\0t\377\0\0v\377\0\0w\377\0\0y\377\0"
  "\0|\377\0\0\177\377\0\0\202\377\0\0\203\377\0\0\206\377\1\0\210\377\0"
  "\0\211\377\202\0\0\0\0\27\11gY\377\7ZM\377\10\\M\377\14fW\377\15i\\\377"
  "\12`Q\377\31rc\377\4UI\377\10`Q\377\5]N\377\10dS\377\3dT\377\5fY\377"
  "\4dU\377\12aS\377\10WH\377\24tb\377\14eW\377\11\0\2\0\12\0\2\0#U\345"
  "\377#d\345\377#O\345\377\202#U\345\377\15#K\345\377#Q\345\377\"G\345"
  "\377\"P\345\377#D\345\377$>\345\377./\345\377*<\345\377#X\345\377#G\345"
  "\377#d\345\377#^\345\377,3\345\377\202\0\0\0\0\22\0\1e\377\0\1f\377\0"
  "\0h\377\0\0j\377\0\0i\377\0\1i\377\0\0m\377\0\0p\377\0\0t\377\0\0u\377"
  "\0\0x\377\0\0|\377\0\0\177\377\1\0\202\377\1\1\204\377\1\0\210\377\1"
  "\0\214\377\0\0\216\377\202\0\0\0\0&\13p_\377\10[N\377\11dS\377\13k[\377"
  "\25yk\377\4`O\377\14m\\\377\5XK\377\24ud\377\10^O\377\2TD\377\20m\\\377"
  "\7eV\377\3ZM\377\22sc\377\24k]\377\11>/\377\2UH\377\36\0\0\0\"\2\3\0"
  "$u\345\377\77*\345\377#v\345\377@*\345\377#p\345\37790\345\37773\345"
  "\377\"]\345\377\"c\345\377#R\345\377#=\345\377#+\345\377#F\345\377#]"
  "\345\3773A\345\377;%\345\37746\345\377\"F\345\377\202\0\0\0\0\3\0\1_"
  "\377\0\0`\377\0\1c\377\202\0\1e\3775\0\0f\377\0\0i\377\0\0m\377\0\0p"
  "\377\0\0r\377\0\0t\377\0\0x\377\0\0|\377\0\0\201\377\0\0\207\377\1\0"
  "\212\377\1\0\215\377\0\0\220\377\0\0\0\0\0\11\2\0\14iY\377\2VH\377\4"
  "_P\377\32|k\377\14aR\377\1WH\377\6YL\377\3[L\377\3]M\377\6^P\377\4[N"
  "\377\12cR\377\3K>\377\3eR\377\17rb\377\15WG\377\6WE\377\24vg\377/\12"
  "\4\0:\12\10\0#[\345\377#,\345\377#O\345\377**\345\377$S\345\377%4\345"
  "\377/1\345\377$V\345\37781\345\3777=\345\377$Y\345\377$2\345\377'>\345"
  "\377%W\345\377&F\345\377*9\345\377'I\345\377\"[\345\377\202\0\0\0\0:"
  "\0\1Y\377\0\1[\377\0\1]\377\0\1_\377\0\1`\377\0\0a\377\0\0e\377\0\0j"
  "\377\0\0l\377\0\1n\377\0\0p\377\0\0t\377\0\0w\377\0\0}\377\0\0\203\377"
  "\1\0\207\377\1\0\212\377\0\0\215\377\11\0\0\0\15\3\4\0\3WH\377\10^Q\377"
  "\14iX\377\24_O\377\3\77""1\377\4[J\377\12dS\377\6ZK\377\11YK\377\11f"
  "V\377\5SE\377\4cQ\377\5`T\377\14qc\377\15rb\377\6WF\377'\200o\377\12"
  "UJ\377\216\26\30\0\214\34\32\0#`\345\377$]\345\377$e\345\377'I\345\377"
  "(V\345\377)3\345\377#C\345\377&Y\345\377$=\345\377-'\345\377+O\345\377"
  "#S\345\377'N\345\3772B\345\377/+\345\377#\\\345\37754\345\377'N\345\377"
  "\202\0\0\0\0:\0\0T\377\0\0U\377\0\1X\377\0\1Z\377\0\0\\\377\0\0^\377"
  "\0\0b\377\0\0e\377\0\0g\377\0\1k\377\0\1n\377\0\0q\377\0\0u\377\0\0x"
  "\377\0\0|\377\0\1\200\377\1\0\205\377\0\0\210\377\10\0\0\0\23\0\0\0\10"
  "I:\377\6WI\377\12gU\377\3A6\377\3aO\377\16m]\377\14`R\377\13`R\377\25"
  "ue\377\5hY\377\10hV\377\14bT\377\4bS\377\30vi\377%\210y\377\4TE\377\14"
  "SF\377\6NA\377\273\36)\0\301%0\0#l\344\377>%\345\37743\343\377$c\345"
  "\377$]\344\377)A\345\377#U\344\377!i\344\377!C\344\377&B\344\377)E\344"
  "\377%b\345\377)K\344\377(F\343\377)\77\343\377'L\345\377%M\344\377#R"
  "\345\377\202\0\0\0\0\202\0\1T\377\202\0\0T\3776\0\0U\377\0\0V\377\0\0"
  "Y\377\0\0\\\377\0\0]\377\0\1d\377\0\0g\377\0\0k\377\0\0n\377\0\0r\377"
  "\0\0u\377\0\0z\377\0\0\177\377\0\1\204\377\31\0\0\0""4\3\6\0\5WH\377"
  "\17qd\377\11hY\377\2\\K\377\4eV\377\2aR\377\34[l\377\15jZ\377\30yk\377"
  "\11k^\377\2^O\377\11aR\377\11iX\377\33\201o\377\23bV\377\1=2\377\5_N"
  "\377\24zj\377\257)*\0\264,0\0%a\343\377';\344\377$\77\341\377'X\344\377"
  "1G\343\377&c\346\3776I\343\377,F\343\377-;\343\377)R\343\377/7\343\377"
  "3K\344\377)k\343\377*J\342\377%G\342\377%O\344\377'k\342\377+.\345\377"
  "\202\0\0\0\0\205\0\1S\3775\0\1T\377\0\0U\377\0\0W\377\0\0Y\377\0\0^\377"
  "\0\0`\377\0\0e\377\0\0h\377\0\0l\377\0\1o\377\0\0t\377\0\0z\377\0\0~"
  "\377@\2\5\0t\12\24\0\6^N\377\12p^\377\15gZ\377\15j[\377\15hX\377\20r"
  "`\377\32te\377\22m_\377\7iY\377\11k]\377\7]N\377\6UH\377\14iY\377\6j"
  "Y\377\16eY\377\3TE\377\21ug\377(\211|\377\223&#\0\222\36\36\0.[\342\377"
  ")j\343\377%X\340\3777B\344\37787\342\3779@\346\377.Q\341\377\"5\343\377"
  "\35B\342\377,`\342\377#_\341\377<.\343\377+r\341\3778;\340\377\"e\340"
  "\377*T\344\377*X\340\377\40X\345\377\202\0\0\0\0\205\0\0P\3775\0\1P\377"
  "\0\0Q\377\0\0S\377\0\0T\377\0\0U\377\0\0X\377\0\0]\377\0\0a\377\0\0c"
  "\377\0\1g\377\0\1m\377\0\1s\377\0\0w\377W\26\22\0\221\40\"\0\4YL\377"
  "\30[i\377\15gW\377\12iX\377\16iZ\377\27o_\377\16o`\377\25yl\377\5dV\377"
  "\7dU\377\1PA\377\10]N\377\33~n\377\7gW\377\17n^\377\16o`\377!\207z\377"
  "\34}o\377l\16\17\0p\6\12\0=.\341\377G2\342\377'K\336\37731\344\37739"
  "\340\377.9\346\377+i\340\377#B\341\377\40""3\341\377G=\342\377#X\341"
  "\377,B\343\377-d\341\377*2\340\377#S\340\3774*\344\377+t\337\377\40w"
  "\345\377\202\0\0\0\0\204\0\0N\377\202\0\1L\3774\0\1N\377\0\1P\377\0\1"
  "Q\377\0\0O\377\0\0Q\377\0\0U\377\0\0Y\377\0\0[\377\0\0_\377\0\0e\377"
  "\0\0l\377\0\0p\377\211!\40\0\256&(\0\5dT\377\12j[\377\5K\77\377\14l\\"
  "\377\21rc\377\15_N\377\24vg\377\11k]\377\2YJ\377\4XI\377\0M@\377\25p"
  "_\377\16eW\377\5VJ\377\10`P\377\1ZI\377\16k[\377\3N@\3777\7\3\0""8\0"
  "\0\0'0\342\377,5\342\377(Q\336\377+A\344\377,A\341\377.<\346\377,g\340"
  "\377\37h\342\377\36>\341\3770I\342\377$n\341\377.k\344\377/b\342\377"
  "(^\340\377#j\337\377\"M\344\377,j\340\377\37d\345\377\202\0\0\0\0\202"
  "\0\0P\377\5\0\0O\377\0\0N\377\0\1L\377\0\1K\377\0\1L\377\202\0\1M\377"
  "1\0\0N\377\0\0O\377\0\0Q\377\0\0S\377\0\0T\377\0\0X\377\0\0]\377\0\0"
  "c\377\0\0h\377\250&&\0\277%'\0\31}n\377\30[j\377\10WL\377\34\204t\377"
  "\17n`\377\11[K\377\11iZ\377\3YK\377\6SE\377\13[M\377\12gY\377\5`R\377"
  "\5_P\377\10hY\377\26xh\377\3UE\377\6^M\377\2I=\377\34\10\1\0\32\1\0\0"
  "&0\342\377+B\343\377%\\\337\377*W\344\377*C\341\377,^\346\377G-\341\377"
  ":\37\342\377\35j\342\377/f\343\377F&\342\377F,\344\377L.\342\377B*\340"
  "\377>#\340\377#o\345\377D,\341\377;!\346\377\202\0\0\0\0\5\0\0S\377\0"
  "\0R\377\0\0P\377\0\0N\377\0\1M\377\204\0\1L\377\205\0\0O\377,\0\0P\377"
  "\0\0T\377\0\0Y\377\0\0]\377\267!\"\0\304\36\40\0\23m`\377\4J9\377\16"
  "eU\377\15l`\377\3[J\377\11bS\377\20qc\377\4_O\377\5YI\377\16dW\377\1"
  "XJ\377\16l^\377\17rc\377\20qb\377\11dT\377\23i[\377\27vh\377\22ug\377"
  "\26\2\0\0\16\3\1\0'A\343\377*M\343\377%p\340\377+y\345\377)b\342\377"
  "+q\346\377/+\341\377)\37\342\377\35^\342\377/a\343\377-$\342\377=,\344"
  "\377:.\342\3771(\341\3775$\341\377#^\345\3778+\341\377\40\40\346\377"
  "\202\0\0\0\0\5\0\0S\377\0\0R\377\0\0P\377\0\0N\377\0\1M\377\204\0\1L"
  "\377\204\0\1M\377-\0\1L\377\0\0K\377\0\0N\377\0\0P\377\0\0S\377\320\30"
  "\30\0\330\20\22\0\6iW\377\12^P\377\2[M\377\14m]\377\15cU\377\17o`\377"
  "\11]O\377\14cS\377\14\\N\377\12cS\377\11cQ\377\4_S\377\17n^\377\31m]"
  "\377\7M@\377\23hU\377\3</\377\1L<\377\11\5\0\0\7\6\2\0'`\343\377*t\343"
  "\377;%\340\377D*\345\377([\342\377*R\346\377*D\342\377\40""6\343\377"
  "\36Q\343\377.P\343\377$1\343\377+A\344\377-G\343\377'A\341\377($\341"
  "\377#l\345\377*@\342\377\40E\346\377\202\0\0\0\0\5\0\0S\377\0\0R\377"
  "\0\0P\377\0\0N\377\0\1M\377\204\0\1L\377\206\0\1K\377\202\0\1L\377)\0"
  "\0L\377\317\25\30\0\337\27\32\0\16qd\377\16sd\377\24zj\377&\207w\377"
  "\7`R\377\5_P\377\11gW\377\36}m\377\5XH\377\11ZL\377\12cU\377\11h[\377"
  "\20iX\377\2>2\377\4WH\377\15]O\377\3QC\377\14l\\\377\25\10\0\0\0\2\0"
  "\0&z\343\377*g\344\3772%\341\377)2\345\377(n\343\377)y\346\377)L\342"
  "\377\40M\343\377\36U\343\377-\\\344\377$\77\343\377*7\344\377,,\343\377"
  "&J\342\377$Y\342\377#l\345\377)b\342\377!k\346\377\202\0\0\0\0\5\0\0"
  "S\377\0\0R\377\0\0P\377\0\0N\377\0\1M\377\202\0\1L\377\206\0\1K\377\1"
  "\0\0L\377\202\0\0N\377*\0\1L\377\0\0L\377\276\26\25\0\313\37\35\0\25"
  "yi\377\32[k\377\17eV\377\11eT\377\6\\M\377\6RB\377\5ZK\377\13hZ\377\15"
  "aT\377\6[K\377\15ra\377\6bT\377\21m^\377\3^N\377\4eV\377\13UG\377\3["
  "J\377\12cU\3775\4\7\0\5\0\0\0&d\344\377)s\344\377%\77\341\377(C\345\377"
  "F(\343\377C(\346\377(s\343\377\40s\343\377D\37\343\377+u\344\377$C\343"
  "\377*D\345\377++\343\377&N\342\377C$\342\3779#\345\377K(\343\377=!\346"
  "\377\211\0\0\0\0#\11\0\3\0\20\2\2\0$\0\2\0C\0\3\0n\15\24\0\231%(\0\264"
  ").\0\303\"*\0\307\31\"\0\315\27#\0\300\32\36\0\257\33\31\0\247\31\25"
  "\0\241\32\26\0\250\36\34\0\271\36\"\0\305\31%\0\317\25#\0\325\20!\0\325"
  "\23\36\0\321\24\32\0\320\24\25\0\322\26\24\0\321\30\23\0\314\32\16\0"
  "\320\33\20\0\310\32\21\0\304\30\26\0\317\27#\0\314\26-\0\230\20$\0P\3"
  "\11\0\26\2\1\0\14\2\1\0\1\1\1\0\203\0\0\0\0\6\0\1\0\0\13\7\6\0\31\11"
  "\11\0\22\6\6\0\13\3\1\0\11\1\0\0\217\0\0\0\0$\1\5\4\0\11\5\2\0\23\1\0"
  "\0/\0\0\0Y\7\13\0\211\40$\0\24532\0\246&%\0\240\22\21\0\257\16\24\0\302"
  "\33%\0\267\35%\0\226\21\24\0\200\2\5\0u\0\0\0\203\15\15\0\247\40&\0\275"
  "!,\0\310\23\"\0\323\15\36\0\325\23\36\0\316\24\27\0\314\23\21\0\317\31"
  "\25\0\307\33\21\0\315\35\20\0\312\30\14\0\310\27\15\0\313\30\24\0\327"
  "\22\34\0\332\24+\0\255\31)\0d\13\17\0#\6\2\0\15\2\0\0\0\2\1\0\204\0\0"
  "\0\0\4\10\0\4\0\6\1\0\0\7\3\0\0\7\3\2\0\212\0\0\0\0(\254`\36\377\245"
  "R\30\377\256V\27\377\260X\30\377\2155\11\377\220\77\15\377\224F\22\377"
  "\234L!\377\217\77\24\377\224F\22\377\270l*\377\262i\32\377\262f\33\377"
  "\273m&\377\274l*\377\251X\31\377\262e\32\377\256a\27\377J\6\3\0""9\2"
  "\0\0""4S\237\3772[\226\377N9\215\377G\32k\377W;y\377T:\210\377R8\236"
  "\377k2\224\377\1778\215\377m9\211\377\201@\227\377\2300\230\377\2501"
  "\233\377\207W\230\377or\216\377pt\205\377ip\227\377hp\224\377\207\24"
  "\31\0@\4\4\0\203DDD\377\2fff\377UUU\377\203DDD\377\203UUU\377\5fff\377"
  "DDD\377UUU\377DDD\377UUU\377\202DDD\377\202\0\0\0\0(\260c%\377\247S\34"
  "\377\251P\24\377\256V\30\377\234D\32\377\223@\21\377\221@\21\377\213"
  ":\22\377\224B\32\377\224C\24\377\275o2\377\272n$\377\272l&\377\265g$"
  "\377\265d%\377\262_$\377\266g\40\377\254]\30\377$\0\0\0\36\2\1\0.T\231"
  "\3774T\224\377O1\216\377I\35s\377Y>\201\377M8\206\377Q:\237\377l0\222"
  "\377~=\217\377k>\212\377uA\217\377\2135\220\377\250-\221\377\235:\241"
  "\377\212X\233\377\177x\206\377rri\377PV\77\377\254\31!\0l\14\20\0\202"
  "UUU\377\3DDD\377UUU\377DDD\377\202UUU\377\1fff\377\203UUU\377\2DDD\377"
  "333\377\205DDD\377\202\0\0\0\0(\254^&\377\245P\35\377\246M\23\377\267"
  "_!\377\233C\31\377\231E\31\377\233H\35\377\2159\26\377\224@\35\377~,"
  "\5\377\253[#\377\256a\35\377\246W\26\377\256\\\35\377\256Z\37\377\227"
  "A\10\377\273g&\377\271f%\377\26\0\3\0\20\1\4\0""6T\237\377@H\227\377"
  "T%\213\377K'v\377U=\203\377F7\211\377T@\245\377p0\222\377}\77\216\377"
  "j>\206\377oB\210\377\202@\216\377\226/\223\377\2511\221\377\2409\231"
  "\377\215L\260\377\203\\\235\377\203c\226\377\274\37&\0\206\35!\0\202"
  "DDD\377\204UUU\377\1fff\377\203UUU\377\205DDD\377\3UUU\377DDD\377UUU"
  "\377\202\0\0\0\0)\252]#\377\264`+\377\257V\31\377\277h%\377\226\77\21"
  "\377\240L\34\377\236K\36\377\2169\24\377\2072\16\377\202.\4\377\255\\"
  "#\377\264d\"\377\270f&\377\265a\"\377\265`\"\377\263]\37\377\302k+\377"
  "\272c#\377\1\1\0\0\0\5\1\0;@\235\377E3\222\377V\32\203\377M1u\377L7\201"
  "\377H\77\222\377TB\247\377s0\222\377\200>\216\377n@\206\377k@\201\377"
  "zB\205\377\177>\207\377\2321\221\377\253.\221\377\2477\212\377\234:\227"
  "\377\240\77\233\377\331\36'\0\262\33$\0DDD\377\203UUU\377\3DDD\377UU"
  "U\377DDD\377\203UUU\377\1DDD\377\204UUU\377\3DDD\377UUU\377DDD\377\202"
  "\0\0\0\0(\264g*\377\265b)\377\250Q\15\377\304n$\377\2157\12\377\240L"
  "\26\377\243O\40\377\223=\26\377}(\6\377\224@\17\377\264a&\377\265e\""
  "\377\270f!\377\277k&\377\302m)\377\271b\36\377\273b\35\377\303j%\377"
  "\1\1\1\0\0\6\3\0S!\217\377Q!\201\377O*z\377M:\177\377B9\211\377NG\242"
  "\377X8\232\377z1\222\377\202<\212\377mH\214\377eJ\206\377qF|\377v>|\377"
  "\205:\203\377\2214\206\377\2327\214\377\244:\215\377\247:\212\377\317"
  "\32\37\0\257\31\"\0\202DDD\377\6UUU\377333\377UUU\377fff\377DDD\377f"
  "ff\377\202DDD\377\10UUU\377fff\377UUU\377fff\377DDD\377UUU\377DDD\377"
  "UUU\377\202\0\0\0\0(\262f$\377\265d\40\377\264^\24\377\262[\25\377\226"
  "@\16\377\231H\20\377\240N\34\377\224@\30\377\201,\5\377\240L\26\377\265"
  "a\36\377\270f\32\377\273h\33\377\276k\36\377\276j\35\377\272f\31\377"
  "\270a\32\377\272g\37\377\2\0\1\0\0\0\0\0P#\202\377R+\202\377L3\203\377"
  "D9\210\377FA\232\377S@\242\377g4\232\377\2021\224\377~;\214\377lE\214"
  "\377^G\205\377eH\201\377pCz\377t>x\377w=y\377v>z\377vAv\377yCv\377\332"
  "\24!\0\251\30\35\0\204UUU\377\1fff\377\202UUU\377\2DDD\377333\377\202"
  "DDD\377\2UUU\377DDD\377\205UUU\377\202\0\0\0\0(\270l(\377\262a\31\377"
  "\264^\24\377\251R\17\377\223<\12\377\240Q\24\377\240Q\36\377\215;\22"
  "\377\2075\7\377\247U\31\377\276l\"\377\306u%\377\302q!\377\302q\40\377"
  "\300o\37\377\301p\40\377\310q\40\377\310u#\377\2\0\3\0\0\0\0\0H4\213"
  "\377A6\210\377>:\214\377E@\232\377R\77\242\377d7\235\377v4\224\377\202"
  ";\222\377q@\211\377gE\206\377bK\207\377^I\206\377fI}\377eEv\377cJs\377"
  "^Oq\377`Qq\377]Rq\377\331\27\"\0\233\25\26\0\202UUU\377\203DDD\377\1"
  "UUU\377\202DDD\377\1""333\377\204UUU\377\1fff\377\203UUU\377\1fff\377"
  "\202\0\0\0\0\22\277s/\377\302q+\377\274f\37\377\301i'\377\240J\21\377"
  "\256`\40\377\251[\40\377\227F\25\377\237M\33\377\260_\37\377\276m\"\377"
  "\277o\"\377\276n!\377\274m\37\377\277o!\377\300q#\377\311p\40\377\305"
  "r\37\377\202\0\0\0\0\24H/\224\377I5\225\377P9\234\377Z9\244\377c6\240"
  "\377w3\227\377\200;\220\377m=\202\377bF\202\377pU\214\377iP\207\377]"
  "H\205\377[H\200\377^L[\377]Sw\377Z\\u\377Xe{\377Un\200\377\273#\"\0\202"
  "\27\21\0\202UUU\377\1DDD\377\203UUU\377\3DDD\377UUU\377fff\377\204UU"
  "U\377\3DDD\377UUU\377DDD\377\202UUU\377\202\0\0\0\0\22\272n*\377\304"
  "r/\377\246O\14\377\304l+\377\246Q\21\377\256`\35\377\254^!\377\227F\24"
  "\377\243Q\37\377\252Y\32\377\303r)\377\271j!\377\275n%\377\271j!\377"
  "\275m%\377\274m$\377\273c'\377\264_\40\377\202\0\0\0\0\25](\231\377]"
  "0\234\377b5\237\377i5\240\377r:\225\377|>\217\377n;\200\377cD\204\377"
  "cU\211\377_W\212\377dX\217\377_K\207\377]L\211\377WVu\377Xdw\377[mw\377"
  "czn\377j\204h\377\261#!\0g\27\14\0fff\377\203UUU\377\3DDD\377UUU\377"
  "DDD\377\202UUU\377\3DDD\377UUU\377fff\377\202UUU\377\4DDD\377UUU\377"
  "DDD\377fff\377\202\0\0\0\0\22\277s/\377\276l*\377\237G\10\377\275e%\377"
  "\243O\14\377\245W\24\377\252[#\377\220\77\21\377\225B\23\377\235K\17"
  "\377\316}6\377\302s-\377\310z4\377\277p*\377\276o)\377\270i#\377\274"
  "i2\377\245T\34\377\202\0\0\0\0\24a6\231\377a6\230\377m<\235\377t>\236"
  "\377r@\211\377i;|\377eF\200\377`U\211\377VV\210\377Y\\\216\377WV\214"
  "\377YT\216\377PY\212\377Nd}\377Xtk\377o\206o\377\204\216f\377\210\223"
  "\\\377\262\31\36\0Y\20\7\0\210UUU\377\2DDD\377UUU\377\202DDD\377\202"
  "UUU\377\203DDD\377\1UUU\377\202\0\0\0\0\22\273n.\377\272j)\377\267c!"
  "\377\305q.\377\244R\15\377\250Z\33\377\256_(\377\233J\32\377\230E\30"
  "\377\231F\17\377\316}8\377\301r,\377\312}6\377\304w0\377\275n(\377\266"
  "d\37\377\302t5\377\236Q\23\377\202\0\0\0\0\26YD\231\377Y>\223\377\\;"
  "\221\377[:\214\377Z\77\210\377YF\213\377TR\214\377MZ\210\377J_\205\377"
  "N`\210\377O]\211\377P_\214\377K^\205\377Tm}\377l}f\377\203z[\377\200"
  "\210o\377p|a\377\241\25\30\0X\7\3\0UUU\377fff\377\202DDD\377\204UUU\377"
  "\202DDD\377\202UUU\377\204DDD\377\2UUU\377fff\377\202\0\0\0\0\14\274"
  "l0\377\276o.\377\300r+\377\307y2\377\251[\26\377\262d+\377\250[\40\377"
  "\232K\21\377\226D\24\377\231G\20\377\305t.\377\265d\36\377\202\310z2"
  "\377\4\273f!\377\264Y\26\377\301w1\377\251[\33\377\202\0\0\0\0\24PL\233"
  "\377VL\233\377SJ\227\377NM\224\377JM\212\377FQ\210\377H_\205\377Lk\177"
  "\377Bf~\377If\202\377Id\203\377Hg\205\377Fi\204\377Mtq\377w\212m\377"
  "\201e\234\377\206\206m\377osa\377\243\27\40\0Z\5\14\0\202UUU\377\203"
  "DDD\377\3UUU\377DDD\377UUU\377\202DDD\377\202UUU\377\2fff\377DDD\377"
  "\204UUU\377\202\0\0\0\0\22\302s0\377\303t/\377\277q)\377\312[7\377\257"
  "_\"\377\250X\"\377\253]\"\377\251Y\37\377\250T%\377\244P\32\377\301n"
  "(\377\245T\17\377\316\2008\377\301s+\377\313w1\377\274b\36\377\301v0"
  "\377\276q0\377\202\0\0\0\0\24TU\232\377PQ\223\377MO\214\377LO\207\377"
  "MO\202\377LU\206\377Na\211\377Sm\210\377Kp\206\377Mr\207\377Lq\204\377"
  "Lr\202\377Hn|\377Ksw\377s\211b\377\204k\233\377\177z\202\377[\205N\377"
  "\242\33\"\0a\7\20\0\202UUU\377\202DDD\377\1UUU\377\202DDD\377\205UUU"
  "\377\1DDD\377\205UUU\377\202\0\0\0\0\22\270h\"\377\300p)\377\267g\40"
  "\377\271h&\377\255[\40\377\250V\"\377\247W\35\377\253Z!\377\264^/\377"
  "\242M\27\377\263`\32\377\270g!\377\327\211A\377\305w/\377\310s.\377\305"
  "j'\377\310[6\377\271n,\377\202\0\0\0\0\25SY\251\377X_\245\377Xb\231\377"
  "Ye\222\377Ve\232\377Wk\237\377Xt\236\377Ru\220\377Oy\213\377X\203\220"
  "\377Y\206\213\377Y\206\207\377P}\201\377Gsx\377a\201b\377~||\377\215"
  "t\206\377\202\200[\377\255\32$\0h\13\23\0UUU\377\203DDD\377\1UUU\377"
  "\206DDD\377\202UUU\377\1DDD\377\203UUU\377\1DDD\377\202\0\0\0\0\22\302"
  "n.\377\276k)\377\300m'\377\275j&\377\266b$\377\272h2\377\257]#\377\252"
  "V\35\377\247P\"\377\230A\14\377\272e\40\377\300o(\377\316\2008\377\322"
  "\204<\377\270c\36\377\313p-\377\313~9\377\263l)\377\202\0\0\0\0\32H_"
  "\315\377Ib\307\377Mf\300\377Rm\276\377Wq\266\377Wu\265\377Xz\257\377"
  "W~\244\377W|\237\377\\\201\234\377Y\201\216\377W\201\204\377Y\214\206"
  "\377K\200v\377O[l\377m\213m\377\202t}\377\207\201y\377\267\33(\0p\13"
  "\21\0DDD\377UUU\377DDD\377UUU\377DDD\377333\377\205UUU\377\1fff\377\202"
  "DDD\377\204UUU\377\202\0\0\0\0\22\275g.\377\244P\20\377\272f!\377\306"
  "r,\377\271e!\377\257[$\377\252X\36\377\255X\40\377\233C\25\377\2229\10"
  "\377\303n(\377\271h!\377\312|4\377\302t,\377\304p*\377\275b\37\377\276"
  "p,\377\264m*\377\202\0\0\0\0\24GW\315\377J[\322\377N_\331\377Pb\335\377"
  "Nd\331\377Ne\327\377Pk\320\377Tr\307\377[u\273\377^y\261\377]z\240\377"
  "[|\224\377R\211\200\377U\221s\377J\201|\377K}f\377l\214\\\377\177[j\377"
  "\264\36)\0x\13\21\0\202DDD\377\203UUU\377\2DDD\377UUU\377\203DDD\377"
  "\203UUU\377\202fff\377\203UUU\377\202\0\0\0\0\22\260^\40\377\251U\24"
  "\377\253T\23\377\261Z\34\377\265b#\377\242R\31\377\216=\17\377\231I\23"
  "\377\242S\26\377\232M\11\377\303s*\377\274l)\377\317\205\77\377\276j"
  "(\377\270]\"\377\257]\37\377\266e'\377\262e%\377\202\0\0\0\0\25YW\315"
  "\377Zg\325\377Tj\345\377Rm\341\377Sq\340\377Uu\345\377Wx\347\377Su\340"
  "\377Pu\331\377Qt\306\377Vw\266\377]}\260\377V\200\224\377W\205[\377J"
  "\221v\377M\201u\377I\177j\377]\210U\377\266\34&\0\203\13\24\0DDD\377"
  "\203UUU\377\6""333\377DDD\377UUU\377DDD\377UUU\377DDD\377\202fff\377"
  "\204UUU\377\2fff\377DDD\377\202\0\0\0\0\22\261X\33\377\266Z\33\377\262"
  "V\23\377\264[\31\377\275k+\377\254Z%\377\236L\33\377\241O\36\377\235"
  "L\24\377\230H\12\377\303q-\377\301o+\377\320\206\77\377\300k(\377\303"
  "g&\377\301o+\377\314~B\377\252^!\377\202\0\0\0\0\25R]\311\377Sk\325\377"
  "Qr\345\377\\\202\342\377Z\204\331\377\\\207\332\377\\\205\331\377W\201"
  "\325\377T~\323\377S|\334\377Q|\325\377P}\302\377[\177\264\377W}\224\377"
  "N\207\177\377S\213}\377H}r\377D\205b\377\300\33)\0\217\20\27\0UUU\377"
  "\203DDD\377\202UUU\377\202DDD\377\210UUU\377\2DDD\377UUU\377\227\0\0"
  "\0\0\26\12\0\10\0\12\0\5\0\16\3\0\0H\6\7\0\230\15\22\0\301#\"\0\271&"
  "\37\0\302\33%\0\270\37""3\0h\30\33\0""2\6\3\0\12\5\2\0\0\7\3\0\20\4\0"
  "\0_\0\0\0\231\33\37\0\265#-\0\277\"-\0\227\24\34\0""1\11\7\0\7\1\3\0"
  "\1\0\0\0\246\0\0\0\0\26\5\5\7\0\17\0\0\0\26\5\0\0T\21\1\0\263\36\32\0"
  "\300\33\37\0\271$&\0\273&,\0\222\31\"\0^\0\22\0!\2\10\0\17\0\0\0\2\11"
  "\1\0\16\4\0\0M\2\7\0\226\30$\0\273#0\0\311\37,\0\246\22\"\0G\14\10\0"
  "\5\5\0\0\1\1\0\0\221\0\0\0\0\22\213\276\367\377\216\301\372\377\221\305"
  "\377\377\223\307\377\377\217\305\377\377\213\301\375\377\207\275\371"
  "\377\205\273\367\377\224\310\377\377\217\303\374\377\223\304\376\377"
  "\237\316\377\377\244\321\377\377\240\313\377\377\237\310\374\377\243"
  "\316\377\377\233\306\373\377\225\303\367\377\202\0\0\0\0\3\377\272Y\377"
  "\377\303e\377\353\252A\377\203\377\262A\377\3\377\272Y\377\377\303e\377"
  "\353\252A\377\202\377\262A\377\1\377\272Y\377\202\377\303e\377\1\353"
  "\252A\377\203\377\262A\377\24\312\40-\0\250\21\40\0;\11\5\377F\13\5\377"
  "C\13\6\377N\16\10\377K\15\7\377d\24\11\377\207\37\20\377i\24\11\377C"
  "\13\6\377G\12\6\377K\14\6\377M\14\6\377s\26\11\377^\22\11\377=\11\5\377"
  "@\11\5\377>\11\5\377K\14\6\377\202\0\0\0\0\22\211\273\366\377\215\277"
  "\372\377\220\304\376\377\222\306\377\377\217\305\377\377\214\302\376"
  "\377\210\276\372\377\206\274\370\377\221\305\377\377\217\303\375\377"
  "\222\305\376\377\231\312\377\377\237\314\377\377\237\312\377\377\240"
  "\311\375\377\241\314\377\377\233\311\375\377\225\304\370\377\202\0\0"
  "\0\0\1\377\272Y\377\202\377\303e\377\1\353\252A\377\202\377\262A\377"
  "\3\377\272Y\377\377\303e\377\353\252A\377\202\377\262A\377\1\377\272"
  "Y\377\202\377\303e\377\1\353\252A\377\203\377\262A\377\24\312\37/\0\254"
  "\21\37\0t\35\21\377\204\40\22\377_\22\11\377L\15\6\377K\15\6\377J\14"
  "\6\377L\15\7\377s\32\15\377n\32\17\377g\24\11\377e\23\10\377f\23\10\377"
  "J\14\6\377C\12\5\377Z\20\10\377C\13\6\377<\11\5\377E\13\6\377\202\0\0"
  "\0\0\22\207\271\366\377\212\274\371\377\216\302\376\377\221\304\377\377"
  "\217\305\377\377\215\303\377\377\211\277\375\377\206\274\370\377\214"
  "\300\374\377\220\304\376\377\223\306\377\377\223\304\374\377\230\305"
  "\374\377\235\313\377\377\240\313\376\377\236\311\374\377\235\313\377"
  "\377\226\305\371\377\202\0\0\0\0\1\377\272Y\377\202\377\303e\377\204"
  "\377\272Y\377\2\377\303e\377\353\252A\377\202\377\262A\377\1\377\272"
  "Y\377\202\377\303e\377\1\353\252A\377\203\377\262A\377\24\314\35.\0\261"
  "\25\"\0_\23\11\377Q\17\7\377C\13\6\377F\15\6\377p\31\15\377\204#\24\377"
  "i\26\14\377W\20\7\377X\22\12\377\177\37\22\377\204\"\23\377\202\"\23"
  "\377\212#\24\377\212\37\21\377\213\40\21\377w\32\15\377^\21\10\377Q\16"
  "\6\377\202\0\0\0\0\7\207\271\370\377\210\272\371\377\213\276\375\377"
  "\217\302\377\377\217\305\377\377\215\303\377\377\212\300\377\377\202"
  "\207\275\373\377\14\221\305\377\377\223\307\377\377\216\301\370\377\223"
  "\302\370\377\234\312\376\377\240\316\377\377\233\311\373\377\236\315"
  "\377\377\227\306\372\377\0\0\0\0\3\0\11\0\377\272Y\377\202\377\303e\377"
  "\1\353\252A\377\203\377\272Y\377\2\377\303e\377\353\252A\377\202\377"
  "\262A\377\1\377\272Y\377\202\377\303e\377\1\353\252A\377\203\377\262"
  "A\377\24\315\34.\0\264\32\"\0G\14\5\377[\22\10\377l\26\13\377e\24\14"
  "\377i\23\10\377\\\20\10\377Q\16\7\377>\12\5\377D\13\6\377]\21\10\377"
  "E\13\6\377C\12\6\377Q\21\11\377f\27\17\377T\21\11\377X\24\13\377k\32"
  "\20\377\220&\27\377\202\0\0\0\0\202\210\271\373\377\23\210\273\374\377"
  "\213\276\377\377\215\302\377\377\214\303\377\377\211\300\377\377\207"
  "\276\376\377\204\274\371\377\216\304\377\377\223\307\377\377\216\301"
  "\370\377\220\302\367\377\233\312\376\377\240\316\377\377\235\313\375"
  "\377\236\315\377\377\231\310\374\377\0\0\0\0\3\0\7\0\377\272Y\377\202"
  "\377\303e\377\2\353\252A\377\377\262A\377\202\377\272Y\377\2\377\303"
  "e\377\353\252A\377\202\377\262A\377\1\377\272Y\377\202\377\303e\377\1"
  "\353\252A\377\203\377\262A\377\24\315!1\0\264\35\"\0i\25\14\377s\32\17"
  "\377W\22\12\377R\23\13\377e\31\16\377v\32\16\377s\31\15\377n\27\15\377"
  "\200\34\20\377y\31\14\377j\24\11\377O\15\7\377M\16\7\377Y\20\10\377H"
  "\15\7\377\77\12\6\377K\14\7\377H\13\6\377\202\0\0\0\0\17\213\274\377"
  "\377\207\272\374\377\206\271\373\377\205\272\374\377\210\277\377\377"
  "\213\302\377\377\212\301\377\377\207\276\377\377\203\272\372\377\212"
  "\302\377\377\217\306\377\377\220\304\375\377\220\303\372\377\226\310"
  "\375\377\234\313\377\377\202\235\314\377\377\4\231\313\376\377\0\2\7"
  "\0\5\0\4\0\377\272Y\377\202\377\303e\377\1\353\252A\377\203\377\272Y"
  "\377\2\377\303e\377\353\252A\377\203\377\272Y\377\202\377\303e\377\1"
  "\353\252A\377\203\377\262A\377\24\310#1\0\262\40!\0P\22\13\377K\14\6"
  "\377G\13\6\377B\13\6\377K\14\6\377C\13\5\377A\13\5\377Q\21\11\377c\27"
  "\17\377k\32\20\377}\40\21\377w\31\15\377z\33\17\377}\40\22\377j\25\15"
  "\377v\32\16\377p\27\13\377F\13\6\377\202\0\0\0\0\25\216\300\377\377\210"
  "\272\377\377\204\266\373\377\202\267\373\377\205\274\377\377\211\300"
  "\377\377\210\301\377\377\206\300\377\377\177\271\371\377\204\273\373"
  "\377\212\302\375\377\220\307\377\377\221\306\374\377\220\303\370\377"
  "\223\306\373\377\233\315\377\377\232\314\377\377\233\315\377\377\0\2"
  "\7\0\6\0\2\0\377\272Y\377\202\377\303e\377\2\353\252A\377\377\262A\377"
  "\202\377\272Y\377\2\377\303e\377\353\252A\377\202\377\262A\377\1\377"
  "\272Y\377\202\377\303e\377\1\353\252A\377\202\377\262A\377\25\377\272"
  "Y\377\277\"-\0\257!\37\0>\11\5\377R\16\7\377Z\17\7\377M\15\6\377]\21"
  "\10\377F\13\6\377E\13\6\377W\17\7\377J\14\6\377=\13\5\377A\11\6\377E"
  "\13\6\377E\14\6\377Q\16\7\377W\21\12\377c\30\16\377f\24\11\377d\22\7"
  "\377\202\0\0\0\0\25\220\302\377\377\211\273\377\377\201\266\372\377\200"
  "\265\371\377\203\271\377\377\206\277\377\377\207\300\377\377\206\277"
  "\377\377~\267\372\377~\270\370\377\207\277\374\377\220\310\377\377\220"
  "\307\377\377\213\277\370\377\216\303\371\377\231\314\377\377\230\313"
  "\377\377\233\316\377\377\4\1\12\0\22\0\5\0\377\272Y\377\202\377\303e"
  "\377\3\353\252A\377\377\262A\377\377\272Y\377\202\377\303e\377\2\353"
  "\252A\377\377\262A\377\202\377\272Y\377\202\377\303e\377\1\353\252A\377"
  "\202\377\262A\377\25\377\272Y\377\270\37\"\0\250%\35\0p\31\14\377`\21"
  "\10\377^\22\10\377\207\37\21\377}\35\17\377g\24\12\377i\26\14\377g\26"
  "\11\377U\15\6\377P\16\7\377M\15\6\377W\17\7\377g\22\10\377`\21\7\377"
  "E\14\6\377C\12\6\377D\13\6\377[\25\15\377\202\0\0\0\0\25\224\306\377"
  "\377\221\303\377\377\206\273\377\377}\262\366\377~\264\372\377\205\276"
  "\377\377\207\300\377\377\201\274\377\377\202\275\377\377x\263\365\377"
  "y\263\363\377\211\300\377\377\223\313\377\377\220\306\377\377\213\302"
  "\373\377\215\301\372\377\231\314\377\377\233\316\377\377\3\1\6\0\16\0"
  "\0\0\377\272Y\377\202\377\303e\377\3\353\252A\377\377\262A\377\377\272"
  "Y\377\202\377\303e\377\1\353\252A\377\204\377\272Y\377\202\353\252A\377"
  "\202\377\262A\377\25\377\272Y\377\260\35#\0\254-'\0L\15\6\377<\13\6\377"
  "8\12\5\377C\15\7\377V\21\11\377Q\21\11\377S\20\12\377n\30\16\377\204"
  "\"\20\377h\27\15\377j\27\16\377s\33\22\377o\32\16\377x\32\14\377h\26"
  "\13\377P\17\7\377Q\17\7\377M\14\7\377\202\0\0\0\0\202\222\304\377\377"
  "\23\212\277\377\377\200\267\372\377~\264\372\377\200\271\376\377\201"
  "\274\377\377\177\272\377\377\204\277\377\377|\267\373\377y\264\366\377"
  "\202\273\376\377\213\305\377\377\217\306\377\377\212\301\377\377\210"
  "\276\372\377\223\307\377\377\227\313\377\377\6\1\0\0\31\0\0\0\377\272"
  "Y\377\202\377\303e\377\3\353\252A\377\377\262A\377\377\272Y\377\202\377"
  "\303e\377\2\353\252A\377\377\262A\377\202\377\272Y\377\2\377\303e\377"
  "\353\252A\377\202\377\262A\377\202\377\272Y\377\24\245\36%\0\24754\0"
  "t\30\13\377M\16\7\377J\15\7\377W\17\11\377Z\22\11\3778\11\5\3774\10\5"
  "\377E\13\6\377P\16\11\377\77\12\5\377:\11\5\377L\14\6\377B\12\6\377:"
  "\11\5\377L\15\10\377U\20\11\377b\23\10\377H\13\6\377\202\0\0\0\0\25\216"
  "\301\377\377\222\305\377\377\217\304\377\377\205\274\377\377}\263\371"
  "\377z\263\370\377[\266\374\377{\267\377\377\203\277\377\377~\272\377"
  "\377w\263\371\377x\263\371\377\201\274\377\377\213\304\377\377\212\303"
  "\377\377\204\273\374\377\214\300\374\377\221\305\377\377\33\2\0\0G\0"
  "\0\0\377\272Y\377\202\377\303e\377\4\353\252A\377\377\262A\377\377\272"
  "Y\377\377\303e\377\202\353\252A\377\1\377\262A\377\202\377\272Y\377\2"
  "\377\303e\377\353\252A\377\202\377\262A\377\202\377\272Y\377\24\221\34"
  "$\0\2463:\0U\22\10\377e\27\15\377d\25\15\377Y\21\11\377U\20\10\377O\14"
  "\6\377S\16\7\377O\15\7\377P\16\7\377J\15\6\377f\23\11\377E\13\6\377C"
  "\13\6\377A\12\5\377J\15\7\377p\30\14\377\206!\20\377g\24\12\377\202\0"
  "\0\0\0\25\212\275\374\377\220\303\377\377\221\307\377\377\211\300\377"
  "\377}\266\371\377w\262\366\377w\263\371\377y\270\377\377~\274\377\377"
  "|\272\377\377v\262\373\377p\254\365\377y\263\374\377\210\302\377\377"
  "\212\304\377\377\203\274\377\377\204\272\372\377\213\276\375\377+\0\0"
  "\0q\0\6\0\377\272Y\377\202\377\303e\377\5\353\252A\377\377\262A\377\377"
  "\272Y\377\377\303e\377\353\252A\377\202\377\262A\377\202\377\272Y\377"
  "\3\377\303e\377\353\252A\377\377\262A\377\203\377\272Y\377\24n\21\31"
  "\0\237\40""3\0""9\11\5\377G\13\6\377m\25\11\377]\22\11\377T\17\10\377"
  "\200\"\21\377z\37\23\377Q\20\7\377Y\23\11\377q\30\17\377q\27\14\377b"
  "\26\13\377X\20\11\377c\23\12\377c\23\11\377G\14\7\377Z\23\14\377^\27"
  "\17\377\202\0\0\0\0\7\210\274\370\377\215\301\375\377\217\305\377\377"
  "\213\302\377\377\201\272\375\377x\263\367\377w\263\371\377\202x\266\377"
  "\377\14x\267\377\377r\260\375\377k\251\366\377s\256\374\377\201\274\377"
  "\377\207\302\377\377\205\275\377\377\177\264\370\377\206\271\373\377"
  "!\2\0\0k\13\15\0\377\272Y\377\202\377\303e\377\5\353\252A\377\377\262"
  "A\377\377\272Y\377\377\303e\377\353\252A\377\202\377\262A\377\202\377"
  "\272Y\377\2\377\303e\377\353\252A\377\202\377\262A\377\202\377\272Y\377"
  "\24D\3\11\0n\14\33\0;\12\5\377G\13\6\377Q\17\7\377]\24\14\377e\27\17"
  "\377b\24\12\377K\13\6\3779\11\6\377@\13\5\377C\12\5\377B\13\5\377M\20"
  "\11\377]\25\14\377r\33\17\377y\33\16\377g\26\14\377I\14\6\377\77\12\6"
  "\377\202\0\0\0\0\25\214\300\372\377\212\301\372\377\213\301\375\377\211"
  "\304\377\377\205\277\377\377[\270\373\377w\263\371\377u\263\374\377s"
  "\262\377\377u\264\377\377s\260\377\377n\253\373\377p\252\374\377x\263"
  "\377\377\200\273\377\377\205\276\377\377~\262\373\377\201\266\374\377"
  "\35\13\7\0b\37\31\0\377\272Y\377\202\377\303e\377\5\353\252A\377\377"
  "\262A\377\377\272Y\377\377\303e\377\353\252A\377\203\377\262A\377\3\377"
  "\272Y\377\377\303e\377\353\252A\377\203\377\262A\377\25\377\272Y\377"
  "(\0\2\0""5\4\7\0m\26\13\377e\24\14\377N\15\6\377<\12\6\377<\12\5\377"
  "Q\17\10\377O\17\7\377I\14\6\377Q\16\7\377V\17\10\377H\13\6\377:\11\5"
  "\377>\11\5\377N\14\7\377<\13\6\377O\17\10\377_\22\10\377Y\20\7\377\202"
  "\0\0\0\0\25\225\311\377\377\213\302\372\377\210\276\372\377\210\303\377"
  "\377\211\303\377\377\177\274\375\377v\262\372\377p\256\367\377r\261\376"
  "\377s\262\377\377u\264\377\377s\262\377\377n\253\376\377l\251\374\377"
  "v\260\377\377\203\274\377\377}\263\375\377\177\263\374\377&\16\16\0l"
  "\40\"\0\377\272Y\377\202\377\303e\377\5\353\252A\377\377\262A\377\377"
  "\272Y\377\377\303e\377\353\252A\377\203\377\262A\377\3\377\272Y\377\377"
  "\303e\377\353\252A\377\202\377\262A\377\202\377\272Y\377\16\36\0\2\0"
  "\34\7\2\0Y\26\14\377i\30\15\377f\24\11\377U\20\10\377S\16\6\377Z\21\11"
  "\377C\12\6\377T\17\11\377n\32\20\377s\31\15\377X\20\7\377E\12\6\377\202"
  "R\16\6\377\4>\11\6\377:\11\6\377H\14\7\377v\34\16\377\202\0\0\0\0\12"
  "\235\320\377\377\217\303\374\377\206\275\366\377\212\302\377\377\213"
  "\305\377\377\202\277\377\377s\262\371\377k\253\363\377s\262\377\377q"
  "\263\377\377\202u\266\377\377\11m\253\376\377c\241\366\377m\251\377\377"
  "\200\272\377\377[\264\377\377{\263\376\377\26\13\7\0D\26\26\0\377\272"
  "Y\377\202\377\303e\377\5\353\252A\377\377\262A\377\377\272Y\377\377\303"
  "e\377\353\252A\377\203\377\262A\377\33\377\272Y\377\377\303e\377\353"
  "\252A\377\377\262A\377\377\272Y\377\377\262A\377\377\303e\377\4\5\0\0"
  "\12\0\1\0D\12\5\377A\13\6\377\\\22\10\377[\33\16\377{\36\21\377}\33\15"
  "\377t\32\16\377S\17\10\377N\15\6\377G\13\6\377W\17\7\377^\21\10\377l"
  "\26\13\377c\23\11\377R\17\7\377Q\17\6\377c\22\10\377F\13\6\377\202\0"
  "\0\0\0\25\232\313\377\377\224\307\377\377\213\277\371\377\206\274\372"
  "\377\211\303\377\377\213\310\377\377y\272\376\377c\246\355\377j\256\371"
  "\377k\256\374\377n\263\377\377r\266\377\377p\262\377\377k\255\377\377"
  "k\253\377\377o\260\377\377t\265\377\377u\264\377\377\12\2\0\0%\3\1\0"
  "\377\272Y\377\202\377\303e\377\5\353\252A\377\377\262A\377\377\272Y\377"
  "\377\303e\377\353\252A\377\203\377\262A\377\3\377\272Y\377\377\303e\377"
  "\353\252A\377\203\377\262A\377\25\377\303e\377\0\0\0\0\3\3\3\0F\13\6"
  "\377:\11\6\377G\15\6\377^\21\10\377D\13\6\377=\13\6\377Y\21\7\377T\17"
  "\7\377H\14\6\377\77\12\6\3777\13\5\377R\16\7\377U\17\10\377C\12\6\377"
  "K\16\7\377j\30\16\377W\20\10\377F\13\6\377\202\0\0\0\0\16\230\311\377"
  "\377\227\312\377\377\220\302\375\377\205\273\367\377\205\277\376\377"
  "\211\306\377\377~\277\377\377k\256\364\377g\253\364\377f\253\366\377"
  "j\257\375\377m\264\377\377n\262\377\377i\255\377\377\202g\251\377\377"
  "\202o\263\377\377\3\3\2\0\0\20\0\0\0\377\272Y\377\202\377\303e\377\5"
  "\353\252A\377\377\262A\377\377\272Y\377\377\303e\377\353\252A\377\203"
  "\377\262A\377\3\377\272Y\377\377\303e\377\353\252A\377\203\377\262A\377"
  "\1\377\303e\377\202\0\0\0\0\22d\24\11\377m\27\14\377o\26\14\377X\20\7"
  "\377G\14\7\3775\11\5\3774\10\5\377N\15\7\377W\20\10\377\77\12\6\377:"
  "\11\5\377H\15\6\377G\13\6\377@\12\5\3777\12\5\377;\12\5\377G\14\6\377"
  "Q\16\6\377\225\0\0\0\0\5\7\2\0\0\23\1\0\0\23\0\0\0\14\0\2\0\1\0\0\0\243"
  "\0\0\0\0"
]
    # XML strings from Glade
    main_window_ui = """
<?xml version="1.0" encoding="UTF-8"?>
<interface>
  <requires lib="gtk+" version="2.24"/>
  <!-- interface-naming-policy project-wide -->
  <object class="GtkImage" id="hideimage">
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="stock">gtk-ok</property>
  </object>
  <object class="GtkWindow" id="main_window">
    <property name="can_focus">False</property>
    <signal name="focus-out-event" handler="on_main_window_focus_out_event" swapped="no"/>
    <child>
      <object class="GtkVBox" id="vbox1">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkNotebook" id="tab_container">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <child type="tab">
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
    </child>
  </object>
</interface>
    """

    icon_grid_ui = """
<?xml version="1.0" encoding="UTF-8"?>
<interface>
  <requires lib="gtk+" version="2.24"/>
  <!-- interface-naming-policy project-wide -->
  <object class="GtkVBox" id="icon_grid_box">
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <child>
      <object class="GtkVBox" id="top_box">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <placeholder/>
        </child>
      </object>
      <packing>
        <property name="expand">True</property>
        <property name="fill">True</property>
        <property name="position">0</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox1">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkVBox" id="left_box">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child>
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkTable" id="launcher_grid">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="n_rows">3</property>
            <property name="n_columns">3</property>
            <property name="homogeneous">True</property>
            <child>
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">False</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkVBox" id="right_box">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child>
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">2</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">True</property>
        <property name="fill">False</property>
        <property name="position">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkVBox" id="bottom_box">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <placeholder/>
        </child>
      </object>
      <packing>
        <property name="expand">True</property>
        <property name="fill">True</property>
        <property name="position">2</property>
      </packing>
    </child>
  </object>
</interface>
    """

    config_ui = """
<?xml version="1.0" encoding="UTF-8"?>
<interface>
  <requires lib="gtk+" version="2.24"/>
  <!-- interface-naming-policy project-wide -->
  <object class="GtkAdjustment" id="colsadjustment">
    <property name="upper">99</property>
    <property name="step_increment">1</property>
    <property name="page_increment">10</property>
  </object>
  <object class="GtkVBox" id="config_box">
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <child>
      <object class="GtkHBox" id="hbox1">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="fullscreenbutton">
            <property name="label">fullscreen</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="use_stock">True</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_fullscreenbutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">0</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox7">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="decorcheckbutton">
            <property name="label" translatable="yes">window decoration</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_decorcheckbutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox4">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="keepabovebutton">
            <property name="label" translatable="yes">keep above other windows</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_keepabovebutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">2</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox5">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="workspacesbutton">
            <property name="label" translatable="yes">stick to all workspaces</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_workspacesbutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">3</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox8">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="hideafterbutton">
            <property name="label" translatable="yes">hide after selection</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_hideafterbutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">4</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox14">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="focushidebutton">
            <property name="label" translatable="yes">hide after focus loss</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_focushidebutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">5</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox9">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="sysappsbutton">
            <property name="label" translatable="yes">show system applications</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_sysappsbutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">6</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox3">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkLabel" id="label1">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="label" translatable="yes">Placement: </property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkRadioButton" id="placementradio1">
            <property name="label" translatable="yes">Centre</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="active">True</property>
            <property name="draw_indicator">True</property>
            <signal name="pressed" handler="on_placementradio1_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkRadioButton" id="placementradio2">
            <property name="label" translatable="yes">Under mouse</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <property name="group">placementradio1</property>
            <signal name="pressed" handler="on_placementradio2_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkRadioButton" id="placementradio3">
            <property name="label" translatable="yes">Don't care</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <property name="group">placementradio1</property>
            <signal name="pressed" handler="on_placementradio3_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">3</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">7</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox6">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkLabel" id="label2">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="label" translatable="yes">Icon size</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkSpinButton" id="iconsizespinbutton">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="invisible_char">•</property>
            <property name="primary_icon_activatable">False</property>
            <property name="secondary_icon_activatable">False</property>
            <property name="primary_icon_sensitive">True</property>
            <property name="secondary_icon_sensitive">True</property>
            <property name="adjustment">iconsizeadjustment</property>
            <property name="numeric">True</property>
            <signal name="value-changed" handler="on_iconsizespinbutton_value_changed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">1</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">8</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox13">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkLabel" id="label3">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="label" translatable="yes">Columns</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkSpinButton" id="colsspinbutton">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="invisible_char">•</property>
            <property name="invisible_char_set">True</property>
            <property name="primary_icon_activatable">False</property>
            <property name="secondary_icon_activatable">False</property>
            <property name="primary_icon_sensitive">True</property>
            <property name="secondary_icon_sensitive">True</property>
            <property name="adjustment">colsadjustment</property>
            <signal name="value-changed" handler="on_colsspinbutton_value_changed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">1</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">9</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox10">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkCheckButton" id="iconoutlinebutton">
            <property name="label" translatable="yes">icon outline</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="use_action_appearance">False</property>
            <property name="draw_indicator">True</property>
            <signal name="toggled" handler="on_iconoutlinebutton_toggled" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">10</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox12">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkLabel" id="label4">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="label" translatable="yes">Window height (pixels)</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkSpinButton" id="heightspinbutton">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="invisible_char">•</property>
            <property name="invisible_char_set">True</property>
            <property name="primary_icon_activatable">False</property>
            <property name="secondary_icon_activatable">False</property>
            <property name="primary_icon_sensitive">True</property>
            <property name="secondary_icon_sensitive">True</property>
            <property name="adjustment">heightadjustment</property>
            <signal name="value-changed" handler="on_heightspinbutton_value_changed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="padding">5</property>
            <property name="position">1</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="padding">2</property>
        <property name="position">11</property>
      </packing>
    </child>
    <child>
      <object class="GtkHBox" id="hbox2">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkButton" id="savebutton">
            <property name="label">gtk-save</property>
            <property name="visible">True</property>
            <property name="sensitive">False</property>
            <property name="can_focus">True</property>
            <property name="receives_default">True</property>
            <property name="use_action_appearance">False</property>
            <property name="use_stock">True</property>
            <signal name="pressed" handler="on_savebutton_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkButton" id="restartbutton">
            <property name="label" translatable="yes">Restart</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">True</property>
            <property name="use_action_appearance">False</property>
            <property name="image">restartimage</property>
            <signal name="pressed" handler="on_restartbutton_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkHBox" id="hbox11">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child>
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkButton" id="aboutbutton">
            <property name="label">gtk-about</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">True</property>
            <property name="use_action_appearance">False</property>
            <property name="use_stock">True</property>
            <signal name="pressed" handler="on_aboutbutton_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">3</property>
          </packing>
        </child>
        <child>
          <object class="GtkButton" id="exitbutton">
            <property name="label">gtk-quit</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">True</property>
            <property name="use_action_appearance">False</property>
            <property name="use_stock">True</property>
            <signal name="pressed" handler="on_exitbutton_pressed" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="pack_type">end</property>
            <property name="position">4</property>
          </packing>
        </child>
      </object>
      <packing>
        <property name="expand">False</property>
        <property name="fill">False</property>
        <property name="pack_type">end</property>
        <property name="position">12</property>
      </packing>
    </child>
    <child>
      <placeholder/>
    </child>
  </object>
  <object class="GtkAdjustment" id="heightadjustment">
    <property name="lower">50</property>
    <property name="upper">1000</property>
    <property name="step_increment">1</property>
    <property name="page_increment">10</property>
  </object>
  <object class="GtkAdjustment" id="iconsizeadjustment">
    <property name="lower">8</property>
    <property name="upper">99</property>
    <property name="step_increment">1</property>
    <property name="page_increment">10</property>
  </object>
  <object class="GtkImage" id="restartimage">
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="stock">gtk-refresh</property>
  </object>
</interface>
    """

class Config(object):
    """Access settings stored in an XML file"""
    config_file = os.path.join(os.environ['HOME'], '.config/hermit/config.xml')
    defaults = {'hotkey': 'Super_R',
                'startup_tab': 0,
                'icon_size': 56,
                'icon_outline': True,
                'button_border_width': 3,
                'ignore_these_categories': '',
                'only_these_categories': ['AudioVideo', 'Development', 'Graphics', 'Network', 'Office', 'Security', 'Settings', 'System', 'Utility'],
                'columns': 9,
                'height': 410,
                'fullscreen': False,
                'placement': gtk.WIN_POS_CENTER,
                'decoration': True,
                'keep_above': True,
                'all_workspaces': True,
                'hide_after_selection': True,
                'hide_after_focus_loss': True,
                'show_system_apps': True
                }

    def __init__(self, config_file=None):
        if config_file is not None:
            self.config_file = config_file
        self.booleans = ['fullscreen', 'decoration', 'keep_above', 'all_workspaces', 'hide_after_selection', 'hide_after_focus_loss', 'show_system_apps', 'icon_outline']
        self.numbers = ['startup_tab', 'icon_size', 'button_border_width', 'columns', 'height']
        self.lists = ['ignore_these_categories', 'only_these_categories']
        self.auto_create_file(self.config_file)
        self.load_config()
    
    def auto_create_file(self, filename):
        """Creates default config_file (and directory) if not present, otherwise does nothing"""
        if os.path.exists(filename):
            return
        if not os.path.exists(os.path.dirname(filename)):
            try:
                os.makedirs(os.path.dirname(filename))
            except OSError:
                show_error("problem creating %s" % filename)
                return
        # save defaults
        self.config_dict = self.defaults
        self.save_config()

    def load_config(self):
        """Load settings from config_file"""
        try:
            config_tree = etree.parse(self.config_file)
            foundfile = True
        except IOError:
            show_error("problem reading %s" % self.config_file)
            foundfile = False
        except etree.XMLSyntaxError:
            show_error("syntax error in %s, ignoring whole file" % self.config_file)
            foundfile = False
        
        if foundfile:
            if config_tree is None:
                foundfile = False
                show_error("problem reading %s" % self.config_file)
            else:
                config_root = config_tree.getroot()
        
        # read in the elements (all will be strings)
        self.config_dict = {}
        if foundfile:
            for element in config_root:
                if self.config_dict.has_key(element.tag):
                    show_error("oops there are duplicate items in %s" % self.config_file)
                else:
                    self.config_dict[element.tag] = element.text
        
        # change items from strings to appropriate types
        for item in self.config_dict.keys():
            if item in self.numbers:
                self.config_dict[item] = int(self.config_dict[item])
            if item in self.lists:
                if self.config_dict[item] is None:
                    self.config_dict[item] = []
                else:
                    self.config_dict[item] = self.config_dict[item].split(',')
            if item in self.booleans:
                if self.config_dict[item].lower() in ['true', 'yes', 'on']:
                    self.config_dict[item] = True
                else:
                    self.config_dict[item] = False
            if item == 'placement':
                if self.config_dict[item].lower() == 'none':
                    self.config_dict[item] = gtk.WIN_POS_NONE
                elif self.config_dict[item].lower() in ['center', 'centre']:
                    self.config_dict[item] = gtk.WIN_POS_CENTER
                elif self.config_dict[item].lower() == 'mouse':
                    self.config_dict[item] = gtk.WIN_POS_MOUSE
                else:
                    self.config_dict[item] = gtk.WIN_POS_NONE

        # add any necessary defaults
        for item in self.defaults.keys():
            if item not in self.config_dict.keys():
                self.config_dict[item] = self.defaults[item]
                     
    def save_config(self):
        """Save current settings to config_file"""
        config_root = etree.Element('data')
        for item in self.config_dict.keys():
            leaf = etree.SubElement(config_root, item)
            if item in self.numbers:
                leaf.text = str(self.config_dict[item])
            elif item in self.lists:
                leaf.text = ','.join(self.config_dict[item])
            elif item in self.booleans:
                leaf.text = str(self.config_dict[item])
            elif item == 'placement':
                if self.config_dict[item] == gtk.WIN_POS_CENTER:
                    leaf.text = 'centre'
                elif self.config_dict[item] == gtk.WIN_POS_MOUSE:
                    leaf.text = 'mouse'
                else:
                    leaf.text = 'none'
            else:
                leaf.text = self.config_dict[item]
        config_tree = etree.ElementTree(config_root)
        try:
            config_tree.write(self.config_file, pretty_print=True)
        except IOError:
            show_error("could not write to %s" % self.config_file)
                 
class Hermit(object):
    """Application launcher"""
    tab_file = os.path.join(os.environ['HOME'], '.config/hermit/tabs.xml')
    system_launcher_dir = '/usr/share/applications'
    user_launcher_dir = os.path.join(os.environ['HOME'], '.local/share/applications')
    config_file = os.path.join(os.environ['HOME'], '.config/hermit/config.xml')

    def __init__(self, tab_file=None, system_launcher_dir=None, user_launcher_dir=None, config_file=None):
        if tab_file is not None:
            self.tab_file = tab_file
        if system_launcher_dir is not None:
            self.system_launcher_dir = system_launcher_dir
        if user_launcher_dir is not None:
            self.user_launcher_dir = user_launcher_dir
        if config_file is not None:
            self.config_file = config_file
        self.hermit_icon_pixbuf = gtk.gdk.pixbuf_new_from_inline(len(Inline_assets.hermit_icon_inline[0]), Inline_assets.hermit_icon_inline[0], copy_pixels=False)
        self.config = Config(self.config_file)
        self.save_needed_flag = False
        self.restart_needed_flag = False
        self.visible = False # maybe more reliable than window.get_visible()
        self.create_window()
        # setup keybinder
        keystr = self.config.config_dict['hotkey']
        keybinder.bind(keystr, self.toggle_show, keystr)  # sending keystr as user data although not used in toggle_show
        
    def create_window(self):
        """Creates GTK user interface elements"""
        self.ui = gtk.Builder()
        self.ui.add_from_string(Inline_assets.main_window_ui)
        self.ui.connect_signals(self)
        self.window = self.ui.get_object("main_window")
        self.win_destroy_sig = self.window.connect("destroy", self.on_main_window_destroy, None)
        self.window.set_position(self.config.config_dict['placement'])
        self.window.set_title("hermit")
        self.window.set_icon(self.hermit_icon_pixbuf)
        self.window.set_default_size(-1, self.config.config_dict['height'])
        self.window.set_decorated(self.config.config_dict['decoration'])
        if self.config.config_dict['fullscreen']:
            self.window.fullscreen()
        self.tab_container = self.ui.get_object("tab_container")
        self.tab_container.set_scrollable(True)
        self.tab_container.popup_enable()
        
        # set up tabs from user's xml file
        try:
            tab_root = etree.parse(self.tab_file).getroot()
        except IOError:
            tab_root = None
            show_error("problem reading %s" % self.tab_file)
        if tab_root is not None:
            for tab in tab_root:
                tab_label = gtk.Label(tab.attrib['name'])
                icon_grid = gtk.Builder()
                icon_grid.add_from_string(Inline_assets.icon_grid_ui)
                icon_grid_box = icon_grid.get_object("icon_grid_box")
                launcher_grid = icon_grid.get_object("launcher_grid")
                launcher_list = []
                for launcher in tab.findall('launcher'):
                    launch_tuple = self.read_desktop_file(launcher.text)
                    if launch_tuple:
                        launcher_list.append(launch_tuple)
                self.setup_grid(launcher_grid, launcher_list)
                scrolledwindow = gtk.ScrolledWindow()
                scrolledwindow.set_policy(gtk.POLICY_NEVER, gtk.POLICY_AUTOMATIC)
                scrolledwindow.add_with_viewport(icon_grid_box)
                self.tab_container.insert_page(scrolledwindow, tab_label, int(tab.attrib['rank']))
                self.tab_container.set_tab_reorderable(scrolledwindow, True)
        
        # set up tabs from system locations, if needed
        if self.config.config_dict['show_system_apps']:
            category_tabs = self.get_category_tabs()
            for c in category_tabs.keys():
                tab_label = gtk.Label(c)
                icon_grid = gtk.Builder()
                icon_grid.add_from_string(Inline_assets.icon_grid_ui)
                icon_grid_box = icon_grid.get_object("icon_grid_box")
                launcher_grid = icon_grid.get_object("launcher_grid")
                self.setup_grid(launcher_grid, category_tabs.get(c))
                scrolledwindow = gtk.ScrolledWindow()
                scrolledwindow.set_policy(gtk.POLICY_NEVER, gtk.POLICY_AUTOMATIC)
                scrolledwindow.add_with_viewport(icon_grid_box)
                self.tab_container.append_page(scrolledwindow, tab_label)
                self.tab_container.set_tab_reorderable(scrolledwindow, True)
        
        # setup configuration tab
        config_tab = gtk.Builder()
        config_tab.add_from_string(Inline_assets.config_ui)
        config_tab.connect_signals(self)
        config_box = config_tab.get_object("config_box")
        # remember previous save and restart flags
        save_needed = self.save_needed_flag
        restart_needed = self.restart_needed_flag
        self.save_button = config_tab.get_object("savebutton")
        self.restart_button = config_tab.get_object("restartbutton")
        fullscreen_button = config_tab.get_object("fullscreenbutton")
        fullscreen_button.set_active(self.config.config_dict['fullscreen'])
        placementradio1 = config_tab.get_object("placementradio1")
        placementradio2 = config_tab.get_object("placementradio2")
        placementradio3 = config_tab.get_object("placementradio3")
        if self.config.config_dict['placement'] == gtk.WIN_POS_CENTER:
            placementradio1.set_active(True)
        elif self.config.config_dict['placement'] == gtk.WIN_POS_MOUSE:
            placementradio2.set_active(True)
        elif self.config.config_dict['placement'] == gtk.WIN_POS_NONE:
            placementradio3.set_active(True)
        iconsize_spinbutton = config_tab.get_object("iconsizespinbutton")
        iconsize_spinbutton.set_value(self.config.config_dict['icon_size'])
        colsspinbutton = config_tab.get_object("colsspinbutton")
        colsspinbutton.set_value(self.config.config_dict['columns'])
        heightspinbutton = config_tab.get_object("heightspinbutton")
        heightspinbutton.set_value(self.config.config_dict['height'])
        decorcheckbutton = config_tab.get_object("decorcheckbutton")
        decorcheckbutton.set_active(self.config.config_dict['decoration'])
        config_lab = gtk.Label("Hermit")
        scrolledwindow = gtk.ScrolledWindow()
        scrolledwindow.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
        scrolledwindow.add_with_viewport(config_box)
        self.tab_container.append_page(scrolledwindow, config_lab)
        self.tab_container.set_current_page(self.config.config_dict['startup_tab'])
        self.current_tab = self.config.config_dict['startup_tab']
        self.window.set_keep_above(self.config.config_dict['keep_above'])
        keepabovebutton = config_tab.get_object("keepabovebutton")
        keepabovebutton.set_active(self.config.config_dict['keep_above'])
        iconoutlinebutton = config_tab.get_object("iconoutlinebutton")
        iconoutlinebutton.set_active(self.config.config_dict['icon_outline'])
        workspacesbutton = config_tab.get_object("workspacesbutton")
        workspacesbutton.set_active(self.config.config_dict['all_workspaces'])
        if self.config.config_dict['all_workspaces']:
            self.window.stick()
        else:
            self.window.unstick()
        hideafterbutton = config_tab.get_object("hideafterbutton")
        hideafterbutton.set_active(self.config.config_dict['hide_after_selection'])
        focushidebutton = config_tab.get_object("focushidebutton")
        focushidebutton.set_active(self.config.config_dict['hide_after_focus_loss'])
        sysappsbutton = config_tab.get_object("sysappsbutton")
        sysappsbutton.set_active(self.config.config_dict['show_system_apps'])
        # restore the save and restart buttons to correct states
        self.save_needed(save_needed)
        self.restart_needed(restart_needed)

    def get_category_tabs(self):
        """Returns a dictionary of category: (name, command, icon, category) from the desktop files in /usr/share/applications"""
        tabs_by_category = {}
        try:
            system_launcher_files = os.listdir(self.system_launcher_dir)
        except OSError:
            show_error("problem accessing %s" % self.system_launcher_dir)
            return tabs_by_category
        
        for desktop_file in system_launcher_files:
            fullpath = os.path.join(self.system_launcher_dir, desktop_file)
            launch_tuple = self.read_desktop_file(fullpath)
            if launch_tuple:
                (name, command, icon, category) = launch_tuple
                for c in category.split(';'):
                    if c in self.config.config_dict['ignore_these_categories'] or c not in self.config.config_dict['only_these_categories']:
                        continue
                    if tabs_by_category.has_key(c):
                        tabs_by_category[c].append((name, command, icon, category))
                    else:
                        tabs_by_category[c] = [(name, command, icon, category)]
        return tabs_by_category

    def read_desktop_file(self, filename):
        """Read desktop file and return tuple (name, command, icon, category) or None if bad filename/contents"""
        name = ""
        command = ""
        icon = ""
        category = ""
        # if filename not absolute, get the basename and search for it
        if not os.path.isabs(filename):
            bn = os.path.basename(filename)
            if os.path.exists(os.path.join(self.user_launcher_dir, bn)):
                fullpath = os.path.join(self.user_launcher_dir, bn)
            elif os.path.exists(os.path.join(self.system_launcher_dir, bn)):
                fullpath = os.path.join(self.system_launcher_dir, bn)
            else:
                show_error("cannot find %s" % filename)
                return None
        else:        
            fullpath = filename
        
        try:
            f = open(fullpath, 'rU')
        except IOError:
            show_error("problem reading %s" % fullpath)
            return None
        
        found_info = False
        no_display = False
        for line in f:
            # there might be lots of options in the file, we want the desktop entry
            if line != '[Desktop Entry]\n' and not found_info:
                continue
            if line == '[Desktop Entry]\n':
                found_info = True
                continue
            if line[0] == '[' and found_info:
                break
            if len(line.split('=', 1)) > 1:
                (left, right) = line.split('=', 1)
                if left == "Icon":
                    icon = right.rstrip('\n')
                elif left == "Name":
                    name = right.rstrip('\n')
                elif left == "Exec":
                    command = right.rstrip('\n')
                elif left == "Categories":
                    category = right.rstrip('\n')
                elif left == "NoDisplay":
                    if right.rstrip('\n').lower() == "true":
                        no_display = True
                # TODO: for now, programs that need terminals treated as no display
                elif left == "Terminal":
                    if right.rstrip('\n').lower() == "true":
                        no_display = True
        f.close()
        if found_info and not no_display:
            return (name, command, icon, category)
        else:
            return None
                
    def setup_grid(self, grid, launcher_list):
        """Populates grid (gtk Table) with buttons that launch apps specified in the launcher_list of (name, command, icon, category) tuples"""
        cols = self.config.config_dict['columns']
        count = 0
        for (name, commandtorun, icon, _category) in launcher_list:
            button = gtk.Button()
            button.set_tooltip_text(name)
            image = gtk.Image()
            if os.path.exists(icon):
                # this is a full path to the icon
                try:
                    pixbuf = gtk.gdk.pixbuf_new_from_file_at_size(icon, self.config.config_dict['icon_size'], self.config.config_dict['icon_size'])
                    image.set_from_pixbuf(pixbuf)
                except glib.GError:
                    show_error("problem reading %s" % icon)
            else:
                # this is a theme icon name
                # remove filename extension if there is one because this stops load_icon working
                fn_ext = icon.split('.')[-1]
                if fn_ext and fn_ext.lower() in ['jpg', 'png', 'gif']:
                    icon = '.'.join(icon.split('.')[:-1])
                if gtk.icon_theme_get_default().has_icon(icon):
                    try:
                        pixbuf = gtk.icon_theme_get_default().load_icon(icon, self.config.config_dict['icon_size'], 0)
                    except glib.GError:
                        show_error("problem reading %s" % icon)
                    image.set_from_pixbuf(pixbuf)
            button.add(image)
            button.set_border_width(self.config.config_dict['button_border_width'])
            if self.config.config_dict['icon_outline']:
                button.set_relief(gtk.RELIEF_NORMAL)
            else:
                button.set_relief(gtk.RELIEF_NONE)
            button.connect("clicked", self.launch_command, commandtorun)
            grid.attach(button, (count % cols), (count % cols) + 1, (count / cols), (count / cols) + 1)
            count = count + 1
                            
    def on_fullscreenbutton_toggled(self, button):
        """UI callback"""
        if button.get_active():
            self.window.fullscreen()
            self.config.config_dict['fullscreen'] = True
        else:
            self.window.unfullscreen()
            self.config.config_dict['fullscreen'] = False
        self.save_needed(True)
        
    def on_decorcheckbutton_toggled(self, button):
        """UI callback"""
        self.window.set_decorated(button.get_active())
        self.config.config_dict['decoration'] = button.get_active()
        self.save_needed(True)
        
    def on_keepabovebutton_toggled(self, button):
        """UI callback"""
        self.window.set_keep_above(button.get_active())
        self.config.config_dict['keep_above'] = button.get_active()
        self.save_needed(True)
        
    def on_workspacesbutton_toggled(self, button):
        """UI callback"""
        if button.get_active():
            self.window.stick()
        else:
            self.window.unstick()
        self.config.config_dict['all_workspaces'] = button.get_active()
        self.save_needed(True)
        
    def on_hideafterbutton_toggled(self, button):
        """UI callback"""
        self.config.config_dict['hide_after_selection'] = button.get_active()
        self.save_needed(True)
        
    def on_focushidebutton_toggled(self, button):
        """UI callback"""
        self.config.config_dict['hide_after_focus_loss'] = button.get_active()
        self.save_needed(True)
            
    def on_placementradio1_pressed(self, button):
        """UI callback"""
        self.config.config_dict['placement'] = gtk.WIN_POS_CENTER
        self.window.set_position(self.config.config_dict['placement'])
        self.save_needed(True)

    def on_placementradio2_pressed(self, button):
        """UI callback"""
        self.config.config_dict['placement'] = gtk.WIN_POS_MOUSE
        self.window.set_position(self.config.config_dict['placement'])
        self.save_needed(True)
        
    def on_placementradio3_pressed(self, button):
        """UI callback"""
        self.config.config_dict['placement'] = gtk.WIN_POS_NONE
        self.window.set_position(self.config.config_dict['placement'])
        self.save_needed(True)
        
    def on_iconsizespinbutton_value_changed(self, spinbutton):
        """UI callback"""
        self.config.config_dict['icon_size'] = int(spinbutton.get_value())
        self.save_needed(True)
        self.restart_needed(True)
        
    def on_colsspinbutton_value_changed(self, spinbutton):
        """UI callback"""
        self.config.config_dict['columns'] = int(spinbutton.get_value())
        self.save_needed(True)
        self.restart_needed(True)
        
    def on_heightspinbutton_value_changed(self, spinbutton):
        """UI callback"""
        self.config.config_dict['height'] = int(spinbutton.get_value())
        self.save_needed(True)
        self.restart_needed(True)
        
    def on_sysappsbutton_toggled(self, button):
        """UI callback"""
        self.config.config_dict['show_system_apps'] = button.get_active()
        self.save_needed(True)
        self.restart_needed(True)
        
    def on_iconoutlinebutton_toggled(self, button):
        """UI callback"""
        self.config.config_dict['icon_outline'] = button.get_active()
        self.save_needed(True)
        self.restart_needed(True)
        
    def on_savebutton_pressed(self, button):
        """UI callback"""
        self.config.save_config()
        self.save_needed(False)
           
    def on_restartbutton_pressed(self, button):
        """UI callback, destroys the UI elements and recreates them"""
        self.window.disconnect(self.win_destroy_sig)
        self.window.destroy()
        self.create_window()
        self.restart_needed(False)
        self.window.show_all()
        
    def save_needed(self, flag=True):
        """Enables the save button if settings have been changed"""
        self.save_button.set_sensitive(flag)
        self.save_needed_flag = flag
                    
    def restart_needed(self, flag=True):
        """Enables the restart button if settings have been changed that require the UI to be redisplayed"""
        self.restart_button.set_sensitive(flag)
        self.restart_needed_flag = flag

    def on_exitbutton_pressed(self, button):
        """UI callback for the Quit button"""
        gtk.main_quit()
        
    def on_main_window_destroy(self, widget=None, data=None):
        """UI callback"""
        gtk.main_quit()

    def on_aboutbutton_pressed(self, widget):
        """UI callback for the About button"""
        about = gtk.AboutDialog()
        about.set_position(gtk.WIN_POS_CENTER_ON_PARENT)
        about.set_icon(self.hermit_icon_pixbuf)
        about.set_program_name("hermit")
        about.set_version(version)
        about.set_copyright("")
        about.set_comments("It will start your programs")
        about.set_website("https://github.com/nullpathos/hermit")
        about.set_logo(self.hermit_icon_pixbuf)
        about.run()
        about.destroy()
        
    def on_main_window_focus_out_event(self, widget, event):
        """UI callback"""
        if not self.config.config_dict['hide_after_focus_loss']:
            return True
        # flush out queued gtk events so we get the focus-out and hide/show in the right order
        gtk.main_iteration(block=False)
        # focus-out-events triggered when the mouse pointer is in the window should be ignored
        # e.g. when clicking on the window manager decoration
        if not self.pointer_in_window(widget):
            self.hide_hermit()
        return True
    
    def pointer_in_window(self, window):
        """Returns True if the mouse pointer is within the window bounds (thank you, Kupfer :)"""
        (px, py, _more) = window.get_screen().get_root_window().get_pointer()
        (wx, wy) = window.get_position()
        (width, height) = window.get_size()
        if (px in xrange(wx, wx + width)) and (py in xrange(wy, wy + height)):
            return True
        else:
            return False
    
    def launch_command(self, button, command):
        """UI callback from each button to run the appropriate shell command"""
        argv = shlex.split(command)
        for execkey in ['%f', '%F', '%u', '%U', '%i', '%c', '%k']:
            if execkey in argv:
                argv.remove(execkey)
        try:
            (_pid, _stdin_fd, _stdout_fd, _stderr_fd) = glib.spawn_async(argv, flags=glib.SPAWN_SEARCH_PATH)
        except glib.GError:
            show_error("problem executing %s" % argv)
        if self.config.config_dict['hide_after_selection']:
            self.toggle_show()
    
    def toggle_show(self, data=None):
        """Toggles the UI's visibility"""
        if self.window.get_visible():
            self.hide_hermit()
        else:
            self.show_hermit()
            
    def hide_hermit(self):
        """Makes the UI invisible"""
        if not self.visible:
            return
        self.current_tab = self.tab_container.get_current_page()
        self.window.hide_all()
        self.visible = False
    
    def show_hermit(self):
        """Makes the UI visble"""
        if self.visible:
            return
        self.window.show_all()
        self.window.grab_focus()
        self.window.present()
        self.tab_container.set_current_page(self.current_tab)
        self.visible = True
                  
if __name__ == "__main__":
    hermit = Hermit()
    gtk.main()
    show_error("quit")
